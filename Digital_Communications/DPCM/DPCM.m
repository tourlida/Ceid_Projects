%κωδικοποίηση/αποκωδικοποίηση ενός συστήματος DPCM
function [y1,y2]=DPCM(x,p,bits)
%μέγεθος του δείγματος
N=length(x);
r=zeros;
%υπολογισμός διανυσματος αυτοσυσχέτισης διαστασης(px1)
for i=1:p
    s=0;
    for n=p+1:N
        s=s+x(n)*x(n-i);
    end
    r(i)=(1/(N-p))*s;
end
r=r';
%υπολογισμός πίνακα αυτοσυσχέτισης διαστασης (pxp)
for i=1:p
    for j=1:p
        s=0;
        for n=p:N
            s=s+x(n-j+1)*x(n-i+1);
        end
        R(i,j)=(1/(N-p+1))*s;
    end
end
%υπολογισμός φίλτρου πρόβλεψης
a=R\r;
%υπολογισμός κβαντισμένων συντελεστών πρόβλεψης
a_quantum = my_quantizer(a,8,-2,2)';
%θεωρούμε οτι τα p πρώτα δείγματα μεταδίδονται
%μη κβαντισμένα και χωρίς σφάλματα
%αποθήκευση p πρώτων τιμών στη μνημη
mem(1:p)=x(1:p)';
%αποθηκευση p αρχικων τιμων που θα ληφθουν στη μνήμη
y2(1:p)=mem(1:p)';
%υλοποίηση φίλτρου πρόβλεψης
for j=p+1:N
    sum = 0;
    for i = 1:p
        sum = sum + a_quantum(i)*mem(j-i); 
    end
    %Πρόβλεψη του δείγματος
    prediction(j) = sum;
    %υπολογισμός σφάλματος πρόβλεψης
    y1(j)=x(j)-prediction(j);
    %κβάντιση του σφάλματος πρόβλεψης
    [y1_qua(j)]=my_quantizer(y1(j),bits,-3.5,3.5)';
    %ανακατασκευη του δείγματος
    y2(j)=y1_qua(j)+prediction(j);
    mem(j)=y2(j);
        
end

end


